<script>
function handleAddToCartSuccessEvent(event) {
    if (typeof window.upcartRegisterAddToCart === "function") {
        window.upcartRegisterAddToCart();
        window.upcartOpenOnAddToCartOverride = true; 
    } else {
        console.warn("[UpCart] API is not available on this page.");
    }
}
document.addEventListener("loopByobAddToCartSuccessEvent", (event) => {
    handleAddToCartSuccessEvent(event);
});
document.dispatchEvent(new CustomEvent("loopByobAddToCartSuccessEvent", {
    detail: { message: "Item successfully added to the cart!" }
}));
</script>
<script>
// Function to check the cart drawer status
function checkCartDrawerStatus() {
    const targetNode = document.getElementById('CartPopup'); // Get the cart drawer element

    if (targetNode) {
        // Check if the cart drawer has the 'styles_active__7AzVD' class (active state)
        const isActive = [...targetNode.classList].some(cls => cls.startsWith('styles_active__'));
        if (isActive) {
            clearInterval(window.cartDrawerCheckInterval); // Stop the interval once the drawer is found and active
            setTimeout(async () => {
                await processFirstBundleItem(targetNode);
            }, 600);
        } else {
            console.log("Cart drawer is not active.");
        }
    } else {
        console.warn('CartPopup element not found.');
    }
}

// Function to get cart items
async function getCartItems() {
    try {
        const url = `https://${Shopify.cdnHost.split("/cdn")[0]}/cart.json`;
        const res = await (await fetch(url)).json();
        return res?.items ?? [];
    } catch (error) {
        console.error("Error fetching cart items:", error);
        return [];
    }
}

// Function to process the first bundle item
async function processFirstBundleItem(targetNode) {
    try {
        window.Loop = window.Loop || {};
        window.Loop.bundleCartAllItems = await getCartItems(); // Store the cart items globally
        console.log(window.Loop.bundleCartAllItems);
        hideBundleItems(); // Call hideBundleItems
    } catch (error) {
        console.error("Error processing first bundle item:", error);
    }
}

// Function to hide bundle items
function hideBundleItems() {
    const intervalId = setInterval(() => {
        const productsSection = document.querySelector(".upcart-products-section");

        if (productsSection) {
            clearInterval(intervalId); // Stop checking once the section is found
            const productItems = productsSection.querySelectorAll(".upcart-product-item");

            productItems.forEach(product => {
                const bundleIdElement = product.querySelector(".upcart-item-property strong");
                if (bundleIdElement && bundleIdElement.textContent.trim() === "_bundleId:") {
                    product.style.display = "none";
                }
            });

            // Call the function to initialize the loop bundle after hiding items
            initLoopBundle('upcart-products-section');
        }
    }, 100); // Check every 100ms (0.1 second)
  // toggleCartObserver();
}

// Start checking for the cart drawer after DOM is loaded
document.addEventListener('DOMContentLoaded', () => {
    // Save the interval ID globally to clear it later if necessary
    window.cartDrawerCheckInterval = setInterval(checkCartDrawerStatus, 500); // Check every 500ms
});
  
window.upcartOnCartUpdated = function() {
    console.log("ðŸ›’ Cart updated, hiding bundle items...");
    // âœ… Call the function to hide bundle items
    hideBundleItems();
};
// let cartObserver = null;  // Ensure this is declared outside the function if needed globally
// let startObserving = true;
// function toggleCartObserver() {
//       if (startObserving) {
//           console.log("Starting to observe cart changes...");
//           if (cartObserver) {
//               console.log("Cart observer is already running.");
//               return;
//           }
  
//           cartObserver = new PerformanceObserver((list) => {
//               list.getEntries().forEach((entry) => {
//                   console.log("Entry observed:", entry.name);
//                   const isValidRequestType = ['xmlhttprequest', 'fetch'].includes(entry.initiatorType);
//                   const isCartChangeRequest = /\/cart(?:\/|\.[a-z]+)?/.test(entry.name);
  
//                   if (isValidRequestType && isCartChangeRequest) {
//                       console.log("Cart change detected, processing elements.");
//                       const productItems = productsSection.querySelectorAll(".upcart-product-item");

//                     productItems.forEach(product => {
//                       const bundleIdElement = product.querySelector(".upcart-item-property strong");
//                       if (bundleIdElement && bundleIdElement.textContent.trim() === "_bundleId:") {
//                         product.style.display = "none";
//                       }
//                     });
//                   }
//               });
//           });
  
//           cartObserver.observe({ entryTypes: ["resource"] });
//           console.log("Cart observer started.");
//       } else {
//           if (cartObserver) {
//               console.log("Stopping the cart observer...");
//               cartObserver.disconnect();
//               cartObserver = null;
//           } else {
//               console.log("No cart observer to stop.");
//           }
//       }
//   }
</script>
